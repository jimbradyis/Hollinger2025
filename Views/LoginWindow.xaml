<Window x:Class="Hollinger2025.Views.LoginWindow"
        Loaded="Window_Loaded"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Hollinger2025.Helpers"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        
        mc:Ignorable="d"
        Title="Login"
        Height="500"
        Width="400"
        WindowStartupLocation="CenterScreen">

    <!-- Provide a Material Design style at the window level if desired -->
    <!-- For example:
         Style="{StaticResource MaterialDesignWindow}"
         (Requires that you merge MaterialDesign resources in App.xaml) -->

    <Window.Resources>
        <!-- 1) Normal BooleanToVisibilityConverter -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

        <!-- 2) Inverse converter -->
        <local:InverseBooleanToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />

        <!-- Example styling for text blocks, text boxes, etc. -->
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="0,5,0,5"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="0,5,0,10"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Margin" Value="0,5,0,10"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Title row -->
            <RowDefinition Height="Auto"/>
            <!-- Username label row -->
            <RowDefinition Height="Auto"/>
            <!-- Username input row -->
            <RowDefinition Height="Auto"/>
            <!-- Password label row -->
            <RowDefinition Height="Auto"/>
            <!-- Password input row -->
            <RowDefinition Height="Auto"/>
            <!-- Checkboxes row -->
            <RowDefinition Height="*"/>
            <!-- Space or error row -->
            <RowDefinition Height="Auto"/>
            <!-- Button row -->
        </Grid.RowDefinitions>

        <!-- Title -->
        <TextBlock Text="Archivist Login" 
                   FontSize="24" 
                   HorizontalAlignment="Center"
                   Grid.Row="0"
                   Margin="0,0,0,20"/>

        <!-- Username Label + Icon (if you want a material icon, you can add it) -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <materialDesign:PackIcon Kind="Account" Grid.Column="0" Margin="0,5,5,0"/>
            <TextBlock Text="Username" VerticalAlignment="Center" Grid.Column="1"/>
        </Grid>

        <!-- Username Input -->
        <TextBox Grid.Row="2"
                 Width="300"
                 HorizontalAlignment="Center"
                 Text="{Binding Username, UpdateSourceTrigger=PropertyChanged}"
                 materialDesign:HintAssist.Hint="Username"/>

        <!-- Password Label + Icon -->
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <materialDesign:PackIcon Kind="Lock" Grid.Column="0" Margin="0,5,5,0"/>
            <TextBlock Text="Password" VerticalAlignment="Center" Grid.Column="1"/>
        </Grid>

        <!-- Password Section (PasswordBox or Plain Text) -->
        <Grid Grid.Row="4" Width="300" HorizontalAlignment="Center">
            <!-- If ShowPassword == false => Visible -->
            <PasswordBox x:Name="PasswordBox"
             PasswordChanged="PasswordBox_PasswordChanged"
             Visibility="{Binding ShowPassword, 
                                  Converter={StaticResource InverseBoolToVisibilityConverter}}"
             materialDesign:HintAssist.Hint="Password"/>

            <!-- If ShowPassword == true => Visible -->
            <TextBox x:Name="PlainTextPasswordBox"
         Text="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
         Visibility="{Binding ShowPassword,
                              Converter={StaticResource BoolToVisibilityConverter}}"
         materialDesign:HintAssist.Hint="Password"/>

        </Grid>

        <!-- Checkboxes -->
        <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Center">
            <CheckBox Content="Remember Me" Margin="5" IsChecked="{Binding RememberMe}"/>
            <CheckBox Content="Show Password" Margin="5" IsChecked="{Binding ShowPassword}"/>
        </StackPanel>

        <!-- Error Message -->
        <TextBlock Grid.Row="6"
                   Text="{Binding ErrorMessage}" 
                   Foreground="Red"
                   HorizontalAlignment="Center"
                   FontWeight="Bold"/>

        <!-- Login Button -->
        <Button Grid.Row="7"
                Content="Login"
                Width="100"
                HorizontalAlignment="Center"
                Margin="0,20,0,0"
                Command="{Binding LoginCommand}"/>
    </Grid>
</Window>
